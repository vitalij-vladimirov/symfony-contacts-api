#!/bin/bash -e

APP_NAME='contacts-api'

LIST_OF_UNIX_FILES=(
  "/usr/bin/edit"
  "/etc/mc/mc.keymap"
  "/opt/docker/etc/nginx/vhost.common.d/10-location-root.conf"
)

run_unix_files_formatter() {
  if [ "$OSTYPE" == "msys" ]; then
    for FILE in "${LIST_OF_UNIX_FILES[@]}"
    do
       docker exec -ti "$APP_NAME" bash -c "sed -i -e 's/\r$//' $FILE"
    done
  fi
}

if [ -z "$1" ]; then

  echo "
Docker arguments:
  ${0} up     - run app
  ${0} exec   - exec to $APP_NAME
  ${0} ps     - docker ps -a
  ${0} down   - stop app
  ${0} build  - rebuild project
  ${0} fix    - fix unix files when running docker from windows
  ${0} clear  - clear data folder (may need to be run with sudo on Linux)
"
  exit

elif [ "$1" == "up" ]; then

  docker-compose down
  docker-compose up -d
  docker exec -ti "$APP_NAME" bash -c "composer install"

  run_unix_files_formatter

#  check_db
#  if [ "$DB_STATUS" == "1" ]; then
#    docker exec -ti "$APP_NAME" bash -c "doctrine:migrations:migrate"
#  else
#    echo "Please run migration manually."
#  fi

elif [ "$1" == "exec" ]; then
  docker exec -ti "$APP_NAME" bash
elif [ "$1" == "ps" ]; then
  docker ps -a
elif [ "$1" == "build" ]; then

  docker-compose down
  docker-compose up --build -d
  docker exec -ti "$APP_NAME" bash -c "composer install"

  run_unix_files_formatter

#  check_db
#  if [ "$DB_STATUS" == "1" ]; then
#    docker exec -ti "$APP_NAME" bash -c "doctrine:migrations:migrate"
#  else
#    echo "Please run migration manually."
#  fi

elif [ "$1" == "clear" ]; then

  APP_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/data"

  STRUCTURE=(
    "mysql"
    "log"
  )

  for FILE in "$APP_PATH"/*; do
    echo "Removing "$FILE;
    /bin/rm -rf "$FILE"
  done;

  for DIR in "${STRUCTURE[@]}"; do
    echo "Creating dir" "$DIR";
    /bin/mkdir "$APP_PATH"/"$DIR"
    /bin/chmod 0777 "$APP_PATH"/"$DIR"
    > "$APP_PATH"/"$DIR"/.gitkeep
  done

elif [ "$1" == "down" ]; then
  docker-compose down
  docker exec -ti "$APP_NAME" bash -c "cs && unit"
elif [ "$1" == "fix" ]; then
  run_unix_files_formatter
else
  echo "Argument \"$1\" not found"
fi